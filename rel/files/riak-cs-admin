#!/bin/sh

## -------------------------------------------------------------------
##
## riak-cs-admin: Administrative tasks on Riak CS
##
## Copyright (c) 2014 Basho Technologies, Inc.,
##               2021 TI Tokyo.  All Rights Reserved.
##
## This file is provided to you under the Apache License,
## Version 2.0 (the "License"); you may not use this file
## except in compliance with the License.  You may obtain
## a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
## -------------------------------------------------------------------

SCRIPT="riak-cs-admin"

# if we are called as `riak admin`, PLATFORM_BASE_DIR will have been set
PLATFORM_BASE_DIR=${PLATFORM_BASE_DIR:-$(cd $(dirname "$0")/.. && pwd -P)}

PLATFORM_BIN_DIR={{platform_bin_dir}}
if [ "$PLATFORM_BIN_DIR" = "${PLATFORM_BIN_DIR#/}" ]; then
    PLATFORM_BIN_DIR=$PLATFORM_BASE_DIR/$PLATFORM_BIN_DIR
fi

RPC_HOP="${PLATFORM_BIN_DIR}/riak-cs rpc"

# if we ever need to start a separate node to do fancier stuff than we
# can via rpc, see how this is done in riak/rel/files/riak-admin

# relx provides a 60 sec value hardcoded for RPC timeout, with no easy
# way to supply an 'infinity' from the script.  Much as I hate to
# pretend 60 sec is long enough, here's a TODO note to have it fixed
# (best would be to patch relx/nodetool upstream).  The only call
# affected is `riak-cs-admin cluster-info`.
RPC_HOP_INF=$RPC_HOP

usage() {
    echo "Usage: $SCRIPT { version | status | gc | access | storage |"
    echo "                       stanchion | cluster-info | test |"
    echo "                       cleanup-orphan-multipart | audit-bucket-ownership }"
}

# Check the first argument for instructions
case "$1" in
    version)
        shift
        $RPC_HOP riak_cs_console version
        ;;
    status)
        shift
        $RPC_HOP riak_cs_console status
        ;;
    gc)
        shift
        case "$1" in
            batch|status|pause|resume|cancel|set-interval|set-leeway|earliest-keys)
                $RPC_HOP riak_cs_gc_console "$@"
                ;;
            *)
                echo "Usage: $SCRIPT gc { batch [<leeway_seconds>|--help] | status | pause | resume | cancel |"
                echo "                          set-interval <interval_seconds> | set-leeway <leeway_seconds> |"
                echo "                          earliest-keys [bag names]}"
                exit 1
                ;;
        esac
        ;;
    storage)
        shift
        case "$1" in
            batch|status|pause|resume|cancel)
                $RPC_HOP riak_cs_storage_console "$@"
                ;;
            *)
                echo "Usage: $SCRIPT storage $1 { batch | status | pause | resume | cancel }"
                exit 1
                ;;
        esac
        ;;
    access)
        shift
        case "$1" in
            flush)
                $RPC_HOP riak_cs_access_console flush "$@"
                ;;
            *)
                echo "Usage: $SCRIPT access $1 { flush }"
                exit 1
                ;;
        esac
        ;;
    stanchion)
        shift
        case "$1" in
            switch|show)
                $RPC_HOP riak_cs_stanchion_console "$@"
                ;;
            *)
                echo "Usage: $SCRIPT stanchion $1 { switch HOST PORT | show }"
                exit 1
                ;;
        esac
        ;;
    'test')
        shift
        $RPC_HOP riak_cs_console test
        ;;
    cluster[_-]info)
        if [ $# -lt 2 ]; then
            echo "Usage: $SCRIPT $1 <output_file>"
            exit 1
        fi
        shift

        $RPC_HOP_INF riak_cs_console cluster_info "$@"
        ;;
    cleanup[_-]orphan[_-]multipart)
        shift

        $RPC_HOP riak_cs_console cleanup_orphan_multipart "$@"
        ;;
    audit[_-]bucket[_-]ownership)
        shift
        $RPC_HOP riak_cs_console audit_bucket_ownership "$@"
        ;;
    *)
        usage
        exit 1
        ;;
esac
