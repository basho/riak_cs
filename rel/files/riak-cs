#!/bin/bash

## -------------------------------------------------------------------
##
## riak-cs: Riak CS launcher
##
## Copyright (c) 2021 TI Tokyo.  All Rights Reserved.
##
## This file is provided to you under the Apache License,
## Version 2.0 (the "License"); you may not use this file
## except in compliance with the License.  You may obtain
## a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License.
##
## -------------------------------------------------------------------

XUSER=riak_cs
RUNNER_GEN_DIR="${RUNNER_GEN_DIR:-{{ platform_gen_dir }}}"
RELEASE_ROOT_DIR="${RELEASE_ROOT_DIR:-{{ runner_base_dir }}}"
PID_DIR={{pid_dir}}
COMMAND={{platform_bin_dir}}/riak-cs
DEBUG_COMMAND=/usr/sbin/riak-cs-debug
RUNNER_LOG_DIR={{platform_log_dir}}
RELX_CONFIG_PATH=${RUNNER_GEN_DIR}/sys.config
VMARGS_PATH=${RUNNER_GEN_DIR}/vm.args
PIPE_DIR={{pipe_dir}}/    # trailing slash makes it a path for relx

mkdir -p $PIPE_DIR
chown $XUSER:$XUSER $PIPE_DIR

# On first running the sys.config and vm.args will not be a link
# as cfconfig has not yet been run as a pre_start hook.  If there's no
# link use the default for now
if [ ! -L $RELX_CONFIG_PATH ]; then
    cat >$RELX_CONFIG_PATH <<EOF
[].
EOF
fi
if [ ! -L $VMARGS_PATH ]; then
    cat >$VMARGS_PATH <<EOF
-sname riak_cs
-setcookie riak_cs
EOF
fi


function write_pid_file {  # relx doesn't seem to write the pid file, does it?
    local c=5
    while [[ $c -ne 0 ]]; do
        if [ "`${COMMAND} ping`" = "pong" ]; then
            ${COMMAND} pid >$PID_DIR/riak-cs.pid
            break
        fi
        sleep 1
        c=$(($c - 1))
    done
}

function delete_pid_file {
    rm -f $PID_DIR/riak-cs.pid
}

# When running as a service, running as riak-cs not as root, and systemd has created PID folder
if [[ $EUID -ne 0 ]]; then
    case "$1" in
	start)
	    c=2  # sometimes it doesn't start on first try.
	    while [[ $c -ne 0 ]]; do
		RELX_CONFIG_PATH=${RELX_CONFIG_PATH} VMARGS_PATH=${VMARGS_PATH} RUNNER_LOG_DIR=${RUNNER_LOG_DIR} PIPE_DIR=${PIPE_DIR} ${COMMAND} ${*} -pa {{runner_patch_dir}} \
		    && write_pid_file
		status=$?
		test -r $PID_DIR/riak-cs.pid && exit 0
		sleep 1
		c=$(($c - 1))
	    done
	    exit 1
            ;;
	stop)
            RELX_CONFIG_PATH=${RELX_CONFIG_PATH} VMARGS_PATH=${VMARGS_PATH} RUNNER_LOG_DIR=${RUNNER_LOG_DIR} PIPE_DIR=${PIPE_DIR} ${COMMAND} ${*} \
		&& delete_pid_file
            ;;
    esac
else
    # In this case we're running sudo riak_cs - so have root access, but cannot rely
    # systemd having created the PID dir, and need to sudo to the riak_cs user
    if [ ! -d $PID_DIR ]; then
        mkdir $PID_DIR
        chown $XUSER:$XUSER $PID_DIR
    fi
    case "$1" in
        start)
	    c=2
	    while [[ $c -ne 0 ]]; do
		su - $XUSER -c "NODETOOL_NODE_PREFIX=${NODETOOL_NODE_PREFIX} RUNNER_LOG_DIR=${RUNNER_LOG_DIR} PIPE_DIR=${PIPE_DIR} ${COMMAND} ${*} -pa {{runner_patch_dir}}" \
		    && write_pid_file
		status=$?
		test -r $PID_DIR/riak-cs.pid && exit 0
		sleep 1
		c=$(($c - 1))
	    done
	    exit $status
            ;;
	stop)
            su - $XUSER -c "NODETOOL_NODE_PREFIX=${NODETOOL_NODE_PREFIX} RUNNER_LOG_DIR=${RUNNER_LOG_DIR} PIPE_DIR=${PIPE_DIR} ${COMMAND} ${*} -pa {{runner_patch_dir}}" \
		&& delete_pid_file
            ;;
        *)
            ESCAPED_ARGS=`echo "$@" | sed -e 's/\([\\\(\\\){}"\x27]\)/\\\\\1/g'`
            su - $XUSER -c "NODETOOL_NODE_PREFIX=${NODETOOL_NODE_PREFIX} RELX_CONFIG_PATH=${RELX_CONFIG_PATH} VMARGS_PATH=${VMARGS_PATH} RUNNER_LOG_DIR=${RUNNER_LOG_DIR} PIPE_DIR=${PIPE_DIR} ${COMMAND} ${ESCAPED_ARGS}"
            ;;
    esac
fi


